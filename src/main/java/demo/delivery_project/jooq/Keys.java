/*
 * This file is generated by jOOQ.
 */
package demo.delivery_project.jooq;


import demo.delivery_project.jooq.tables.AccessTokens;
import demo.delivery_project.jooq.tables.CarrierRegions;
import demo.delivery_project.jooq.tables.FlywaySchemaHistory;
import demo.delivery_project.jooq.tables.Images;
import demo.delivery_project.jooq.tables.Offers;
import demo.delivery_project.jooq.tables.Places;
import demo.delivery_project.jooq.tables.Products;
import demo.delivery_project.jooq.tables.Regions;
import demo.delivery_project.jooq.tables.Requests;
import demo.delivery_project.jooq.tables.RolePermissions;
import demo.delivery_project.jooq.tables.Roles;
import demo.delivery_project.jooq.tables.Transactions;
import demo.delivery_project.jooq.tables.Users;
import demo.delivery_project.jooq.tables.records.AccessTokensRecord;
import demo.delivery_project.jooq.tables.records.CarrierRegionsRecord;
import demo.delivery_project.jooq.tables.records.FlywaySchemaHistoryRecord;
import demo.delivery_project.jooq.tables.records.ImagesRecord;
import demo.delivery_project.jooq.tables.records.OffersRecord;
import demo.delivery_project.jooq.tables.records.PlacesRecord;
import demo.delivery_project.jooq.tables.records.ProductsRecord;
import demo.delivery_project.jooq.tables.records.RegionsRecord;
import demo.delivery_project.jooq.tables.records.RequestsRecord;
import demo.delivery_project.jooq.tables.records.RolePermissionsRecord;
import demo.delivery_project.jooq.tables.records.RolesRecord;
import demo.delivery_project.jooq.tables.records.TransactionsRecord;
import demo.delivery_project.jooq.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccessTokensRecord> ACCESS_TOKENS_PKEY = Internal.createUniqueKey(AccessTokens.ACCESS_TOKENS, DSL.name("access_tokens_pkey"), new TableField[] { AccessTokens.ACCESS_TOKENS.TOKEN }, true);
    public static final UniqueKey<CarrierRegionsRecord> CARRIER_REGIONS_CARRIER_ID_KEY = Internal.createUniqueKey(CarrierRegions.CARRIER_REGIONS, DSL.name("carrier_regions_carrier_id_key"), new TableField[] { CarrierRegions.CARRIER_REGIONS.CARRIER_ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<ImagesRecord> IMAGES_NAME_KEY = Internal.createUniqueKey(Images.IMAGES, DSL.name("images_name_key"), new TableField[] { Images.IMAGES.NAME }, true);
    public static final UniqueKey<ImagesRecord> IMAGES_PKEY = Internal.createUniqueKey(Images.IMAGES, DSL.name("images_pkey"), new TableField[] { Images.IMAGES.ID }, true);
    public static final UniqueKey<OffersRecord> OFFERS_CODE_KEY = Internal.createUniqueKey(Offers.OFFERS, DSL.name("offers_code_key"), new TableField[] { Offers.OFFERS.CODE }, true);
    public static final UniqueKey<OffersRecord> OFFERS_PKEY = Internal.createUniqueKey(Offers.OFFERS, DSL.name("offers_pkey"), new TableField[] { Offers.OFFERS.ID }, true);
    public static final UniqueKey<PlacesRecord> PLACES_NAME_KEY = Internal.createUniqueKey(Places.PLACES, DSL.name("places_name_key"), new TableField[] { Places.PLACES.NAME }, true);
    public static final UniqueKey<PlacesRecord> PLACES_PKEY = Internal.createUniqueKey(Places.PLACES, DSL.name("places_pkey"), new TableField[] { Places.PLACES.ID }, true);
    public static final UniqueKey<ProductsRecord> PRODUCTS_CODE_KEY = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("products_code_key"), new TableField[] { Products.PRODUCTS.CODE }, true);
    public static final UniqueKey<ProductsRecord> PRODUCTS_NAME_KEY = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("products_name_key"), new TableField[] { Products.PRODUCTS.NAME }, true);
    public static final UniqueKey<ProductsRecord> PRODUCTS_PKEY = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("products_pkey"), new TableField[] { Products.PRODUCTS.ID }, true);
    public static final UniqueKey<RegionsRecord> REGIONS_NAME_KEY = Internal.createUniqueKey(Regions.REGIONS, DSL.name("regions_name_key"), new TableField[] { Regions.REGIONS.NAME }, true);
    public static final UniqueKey<RegionsRecord> REGIONS_PKEY = Internal.createUniqueKey(Regions.REGIONS, DSL.name("regions_pkey"), new TableField[] { Regions.REGIONS.ID }, true);
    public static final UniqueKey<RequestsRecord> REQUESTS_CODE_KEY = Internal.createUniqueKey(Requests.REQUESTS, DSL.name("requests_code_key"), new TableField[] { Requests.REQUESTS.CODE }, true);
    public static final UniqueKey<RequestsRecord> REQUESTS_PKEY = Internal.createUniqueKey(Requests.REQUESTS, DSL.name("requests_pkey"), new TableField[] { Requests.REQUESTS.ID }, true);
    public static final UniqueKey<RolesRecord> ROLES_PKEY = Internal.createUniqueKey(Roles.ROLES, DSL.name("roles_pkey"), new TableField[] { Roles.ROLES.ID }, true);
    public static final UniqueKey<TransactionsRecord> TRANSACTIONS_CODE_KEY = Internal.createUniqueKey(Transactions.TRANSACTIONS, DSL.name("transactions_code_key"), new TableField[] { Transactions.TRANSACTIONS.CODE }, true);
    public static final UniqueKey<TransactionsRecord> TRANSACTIONS_PKEY = Internal.createUniqueKey(Transactions.TRANSACTIONS, DSL.name("transactions_pkey"), new TableField[] { Transactions.TRANSACTIONS.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_EMAIL_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_email_key"), new TableField[] { Users.USERS.EMAIL }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_USERNAME_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_username_key"), new TableField[] { Users.USERS.USERNAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccessTokensRecord, UsersRecord> ACCESS_TOKENS__ACCESS_TOKENS_USER_ID_FKEY = Internal.createForeignKey(AccessTokens.ACCESS_TOKENS, DSL.name("access_tokens_user_id_fkey"), new TableField[] { AccessTokens.ACCESS_TOKENS.USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<CarrierRegionsRecord, UsersRecord> CARRIER_REGIONS__CARRIER_REGIONS_CARRIER_ID_FKEY = Internal.createForeignKey(CarrierRegions.CARRIER_REGIONS, DSL.name("carrier_regions_carrier_id_fkey"), new TableField[] { CarrierRegions.CARRIER_REGIONS.CARRIER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<CarrierRegionsRecord, RegionsRecord> CARRIER_REGIONS__CARRIER_REGIONS_REGION_ID_FKEY = Internal.createForeignKey(CarrierRegions.CARRIER_REGIONS, DSL.name("carrier_regions_region_id_fkey"), new TableField[] { CarrierRegions.CARRIER_REGIONS.REGION_ID }, Keys.REGIONS_PKEY, new TableField[] { Regions.REGIONS.ID }, true);
    public static final ForeignKey<ImagesRecord, UsersRecord> IMAGES__IMAGES_CREATED_BY_FKEY = Internal.createForeignKey(Images.IMAGES, DSL.name("images_created_by_fkey"), new TableField[] { Images.IMAGES.CREATED_BY }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<OffersRecord, UsersRecord> OFFERS__OFFERS_CREATED_BY_FKEY = Internal.createForeignKey(Offers.OFFERS, DSL.name("offers_created_by_fkey"), new TableField[] { Offers.OFFERS.CREATED_BY }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<OffersRecord, PlacesRecord> OFFERS__OFFERS_PLACE_NAME_FKEY = Internal.createForeignKey(Offers.OFFERS, DSL.name("offers_place_name_fkey"), new TableField[] { Offers.OFFERS.PLACE_NAME }, Keys.PLACES_NAME_KEY, new TableField[] { Places.PLACES.NAME }, true);
    public static final ForeignKey<OffersRecord, ProductsRecord> OFFERS__OFFERS_PRODUCT_ID_FKEY = Internal.createForeignKey(Offers.OFFERS, DSL.name("offers_product_id_fkey"), new TableField[] { Offers.OFFERS.PRODUCT_ID }, Keys.PRODUCTS_PKEY, new TableField[] { Products.PRODUCTS.ID }, true);
    public static final ForeignKey<PlacesRecord, RegionsRecord> PLACES__PLACES_REGION_ID_FKEY = Internal.createForeignKey(Places.PLACES, DSL.name("places_region_id_fkey"), new TableField[] { Places.PLACES.REGION_ID }, Keys.REGIONS_PKEY, new TableField[] { Regions.REGIONS.ID }, true);
    public static final ForeignKey<ProductsRecord, UsersRecord> PRODUCTS__PRODUCTS_CREATED_BY_FKEY = Internal.createForeignKey(Products.PRODUCTS, DSL.name("products_created_by_fkey"), new TableField[] { Products.PRODUCTS.CREATED_BY }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<ProductsRecord, ImagesRecord> PRODUCTS__PRODUCTS_IMAGE_ID_FKEY = Internal.createForeignKey(Products.PRODUCTS, DSL.name("products_image_id_fkey"), new TableField[] { Products.PRODUCTS.IMAGE_ID }, Keys.IMAGES_PKEY, new TableField[] { Images.IMAGES.ID }, true);
    public static final ForeignKey<RequestsRecord, UsersRecord> REQUESTS__REQUESTS_CREATED_BY_FKEY = Internal.createForeignKey(Requests.REQUESTS, DSL.name("requests_created_by_fkey"), new TableField[] { Requests.REQUESTS.CREATED_BY }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<RequestsRecord, PlacesRecord> REQUESTS__REQUESTS_PLACE_NAME_FKEY = Internal.createForeignKey(Requests.REQUESTS, DSL.name("requests_place_name_fkey"), new TableField[] { Requests.REQUESTS.PLACE_NAME }, Keys.PLACES_NAME_KEY, new TableField[] { Places.PLACES.NAME }, true);
    public static final ForeignKey<RequestsRecord, ProductsRecord> REQUESTS__REQUESTS_PRODUCT_ID_FKEY = Internal.createForeignKey(Requests.REQUESTS, DSL.name("requests_product_id_fkey"), new TableField[] { Requests.REQUESTS.PRODUCT_ID }, Keys.PRODUCTS_PKEY, new TableField[] { Products.PRODUCTS.ID }, true);
    public static final ForeignKey<RolePermissionsRecord, RolesRecord> ROLE_PERMISSIONS__ROLE_PERMISSIONS_ROLE_ID_FKEY = Internal.createForeignKey(RolePermissions.ROLE_PERMISSIONS, DSL.name("role_permissions_role_id_fkey"), new TableField[] { RolePermissions.ROLE_PERMISSIONS.ROLE_ID }, Keys.ROLES_PKEY, new TableField[] { Roles.ROLES.ID }, true);
    public static final ForeignKey<RolesRecord, UsersRecord> ROLES__ROLES_CREATED_BY_FKEY = Internal.createForeignKey(Roles.ROLES, DSL.name("roles_created_by_fkey"), new TableField[] { Roles.ROLES.CREATED_BY }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<TransactionsRecord, UsersRecord> TRANSACTIONS__TRANSACTIONS_CARRIER_USERNAME_FKEY = Internal.createForeignKey(Transactions.TRANSACTIONS, DSL.name("transactions_carrier_username_fkey"), new TableField[] { Transactions.TRANSACTIONS.CARRIER_USERNAME }, Keys.USERS_USERNAME_KEY, new TableField[] { Users.USERS.USERNAME }, true);
    public static final ForeignKey<TransactionsRecord, UsersRecord> TRANSACTIONS__TRANSACTIONS_CREATED_BY_FKEY = Internal.createForeignKey(Transactions.TRANSACTIONS, DSL.name("transactions_created_by_fkey"), new TableField[] { Transactions.TRANSACTIONS.CREATED_BY }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<TransactionsRecord, OffersRecord> TRANSACTIONS__TRANSACTIONS_OFFER_CODE_FKEY = Internal.createForeignKey(Transactions.TRANSACTIONS, DSL.name("transactions_offer_code_fkey"), new TableField[] { Transactions.TRANSACTIONS.OFFER_CODE }, Keys.OFFERS_CODE_KEY, new TableField[] { Offers.OFFERS.CODE }, true);
    public static final ForeignKey<TransactionsRecord, RequestsRecord> TRANSACTIONS__TRANSACTIONS_REQUEST_CODE_FKEY = Internal.createForeignKey(Transactions.TRANSACTIONS, DSL.name("transactions_request_code_fkey"), new TableField[] { Transactions.TRANSACTIONS.REQUEST_CODE }, Keys.REQUESTS_CODE_KEY, new TableField[] { Requests.REQUESTS.CODE }, true);
    public static final ForeignKey<UsersRecord, UsersRecord> USERS__USERS_CREATED_BY_FKEY = Internal.createForeignKey(Users.USERS, DSL.name("users_created_by_fkey"), new TableField[] { Users.USERS.CREATED_BY }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<UsersRecord, ImagesRecord> USERS__USERS_IMAGE_ID_FKEY = Internal.createForeignKey(Users.USERS, DSL.name("users_image_id_fkey"), new TableField[] { Users.USERS.IMAGE_ID }, Keys.IMAGES_PKEY, new TableField[] { Images.IMAGES.ID }, true);
    public static final ForeignKey<UsersRecord, RolesRecord> USERS__USERS_ROLE_ID_FKEY = Internal.createForeignKey(Users.USERS, DSL.name("users_role_id_fkey"), new TableField[] { Users.USERS.ROLE_ID }, Keys.ROLES_PKEY, new TableField[] { Roles.ROLES.ID }, true);
}
