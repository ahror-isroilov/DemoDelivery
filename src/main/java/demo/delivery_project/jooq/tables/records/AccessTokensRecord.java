/*
 * This file is generated by jOOQ.
 */
package demo.delivery_project.jooq.tables.records;


import demo.delivery_project.jooq.tables.AccessTokens;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccessTokensRecord extends UpdatableRecordImpl<AccessTokensRecord> implements Record4<String, UUID, LocalDateTime, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.access_tokens.token</code>.
     */
    public void setToken(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.access_tokens.token</code>.
     */
    public String getToken() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.access_tokens.user_id</code>.
     */
    public void setUserId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.access_tokens.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.access_tokens.expiration</code>.
     */
    public void setExpiration(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.access_tokens.expiration</code>.
     */
    public LocalDateTime getExpiration() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.access_tokens.is_deleted</code>.
     */
    public void setIsDeleted(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.access_tokens.is_deleted</code>.
     */
    public Boolean getIsDeleted() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, UUID, LocalDateTime, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, UUID, LocalDateTime, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AccessTokens.ACCESS_TOKENS.TOKEN;
    }

    @Override
    public Field<UUID> field2() {
        return AccessTokens.ACCESS_TOKENS.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return AccessTokens.ACCESS_TOKENS.EXPIRATION;
    }

    @Override
    public Field<Boolean> field4() {
        return AccessTokens.ACCESS_TOKENS.IS_DELETED;
    }

    @Override
    public String component1() {
        return getToken();
    }

    @Override
    public UUID component2() {
        return getUserId();
    }

    @Override
    public LocalDateTime component3() {
        return getExpiration();
    }

    @Override
    public Boolean component4() {
        return getIsDeleted();
    }

    @Override
    public String value1() {
        return getToken();
    }

    @Override
    public UUID value2() {
        return getUserId();
    }

    @Override
    public LocalDateTime value3() {
        return getExpiration();
    }

    @Override
    public Boolean value4() {
        return getIsDeleted();
    }

    @Override
    public AccessTokensRecord value1(String value) {
        setToken(value);
        return this;
    }

    @Override
    public AccessTokensRecord value2(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public AccessTokensRecord value3(LocalDateTime value) {
        setExpiration(value);
        return this;
    }

    @Override
    public AccessTokensRecord value4(Boolean value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public AccessTokensRecord values(String value1, UUID value2, LocalDateTime value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccessTokensRecord
     */
    public AccessTokensRecord() {
        super(AccessTokens.ACCESS_TOKENS);
    }

    /**
     * Create a detached, initialised AccessTokensRecord
     */
    public AccessTokensRecord(String token, UUID userId, LocalDateTime expiration, Boolean isDeleted) {
        super(AccessTokens.ACCESS_TOKENS);

        setToken(token);
        setUserId(userId);
        setExpiration(expiration);
        setIsDeleted(isDeleted);
        resetChangedOnNotNull();
    }
}
