/*
 * This file is generated by jOOQ.
 */
package demo.delivery_project.jooq.tables.records;


import demo.delivery_project.jooq.tables.Images;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImagesRecord extends UpdatableRecordImpl<ImagesRecord> implements Record7<UUID, String, String, String, Long, LocalDateTime, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.images.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.images.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.images.path</code>.
     */
    public void setPath(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.images.path</code>.
     */
    public String getPath() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.images.name</code>. Generated unique name
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.images.name</code>. Generated unique name
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.images.original_name</code>. Original file name
     */
    public void setOriginalName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.images.original_name</code>. Original file name
     */
    public String getOriginalName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.images.size</code>. File size
     */
    public void setSize(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.images.size</code>. File size
     */
    public Long getSize() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.images.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.images.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.images.created_by</code>.
     */
    public void setCreatedBy(UUID value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.images.created_by</code>.
     */
    public UUID getCreatedBy() {
        return (UUID) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, String, Long, LocalDateTime, UUID> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, String, String, String, Long, LocalDateTime, UUID> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Images.IMAGES.ID;
    }

    @Override
    public Field<String> field2() {
        return Images.IMAGES.PATH;
    }

    @Override
    public Field<String> field3() {
        return Images.IMAGES.NAME;
    }

    @Override
    public Field<String> field4() {
        return Images.IMAGES.ORIGINAL_NAME;
    }

    @Override
    public Field<Long> field5() {
        return Images.IMAGES.SIZE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Images.IMAGES.CREATED_AT;
    }

    @Override
    public Field<UUID> field7() {
        return Images.IMAGES.CREATED_BY;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPath();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getOriginalName();
    }

    @Override
    public Long component5() {
        return getSize();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public UUID component7() {
        return getCreatedBy();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPath();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getOriginalName();
    }

    @Override
    public Long value5() {
        return getSize();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public UUID value7() {
        return getCreatedBy();
    }

    @Override
    public ImagesRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ImagesRecord value2(String value) {
        setPath(value);
        return this;
    }

    @Override
    public ImagesRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ImagesRecord value4(String value) {
        setOriginalName(value);
        return this;
    }

    @Override
    public ImagesRecord value5(Long value) {
        setSize(value);
        return this;
    }

    @Override
    public ImagesRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ImagesRecord value7(UUID value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public ImagesRecord values(UUID value1, String value2, String value3, String value4, Long value5, LocalDateTime value6, UUID value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImagesRecord
     */
    public ImagesRecord() {
        super(Images.IMAGES);
    }

    /**
     * Create a detached, initialised ImagesRecord
     */
    public ImagesRecord(UUID id, String path, String name, String originalName, Long size, LocalDateTime createdAt, UUID createdBy) {
        super(Images.IMAGES);

        setId(id);
        setPath(path);
        setName(name);
        setOriginalName(originalName);
        setSize(size);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        resetChangedOnNotNull();
    }
}
