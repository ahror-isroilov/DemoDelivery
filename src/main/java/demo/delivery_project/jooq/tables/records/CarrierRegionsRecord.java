/*
 * This file is generated by jOOQ.
 */
package demo.delivery_project.jooq.tables.records;


import demo.delivery_project.jooq.tables.CarrierRegions;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CarrierRegionsRecord extends TableRecordImpl<CarrierRegionsRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.carrier_regions.carrier_id</code>.
     */
    public void setCarrierId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.carrier_regions.carrier_id</code>.
     */
    public UUID getCarrierId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.carrier_regions.region_id</code>.
     */
    public void setRegionId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.carrier_regions.region_id</code>.
     */
    public UUID getRegionId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return CarrierRegions.CARRIER_REGIONS.CARRIER_ID;
    }

    @Override
    public Field<UUID> field2() {
        return CarrierRegions.CARRIER_REGIONS.REGION_ID;
    }

    @Override
    public UUID component1() {
        return getCarrierId();
    }

    @Override
    public UUID component2() {
        return getRegionId();
    }

    @Override
    public UUID value1() {
        return getCarrierId();
    }

    @Override
    public UUID value2() {
        return getRegionId();
    }

    @Override
    public CarrierRegionsRecord value1(UUID value) {
        setCarrierId(value);
        return this;
    }

    @Override
    public CarrierRegionsRecord value2(UUID value) {
        setRegionId(value);
        return this;
    }

    @Override
    public CarrierRegionsRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CarrierRegionsRecord
     */
    public CarrierRegionsRecord() {
        super(CarrierRegions.CARRIER_REGIONS);
    }

    /**
     * Create a detached, initialised CarrierRegionsRecord
     */
    public CarrierRegionsRecord(UUID carrierId, UUID regionId) {
        super(CarrierRegions.CARRIER_REGIONS);

        setCarrierId(carrierId);
        setRegionId(regionId);
        resetChangedOnNotNull();
    }
}
